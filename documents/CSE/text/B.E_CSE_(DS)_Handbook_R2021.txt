This document contains information about the department B.E. Computer Science and Engineering Data Science branch. 

| Course Code  | Course Title                     | L  | T  | P  | CA  | FE  | Total Credits |
|--------------|----------------------------------|----|----|----|-----|-----|---------------|
| 21DSBS301    | Mathematical Foundations of Data Science | 3  | 1  | -  | 25  | 75  | 100           |
| 21ETES302    | Environmental Studies            | 3  | -  | -  | 25  | 75  | 100           |
| 21DSES303    | Digital Electronics              | 3  | 3  | 2  | -   | -   | 23.5          |
| 21DSES304    | Computer Organization            | 3  | 3  | 2  | -   | -   | 23.5          |
| 21DSPC305    | Object Oriented Programming      | 3  | 3  | -  | 25  | 75  | 100           |
| 21DSPC306    | Data Structures and Algorithms   | 3  | 3  | -  | 25  | 75  | 100           |
| 21DSSP307    | Digital Electronics Lab          | -  | -  | 3  | 40  | 60  | 100           |
| 21DSPC308    | Object Oriented Programming Lab  | -  | -  | 3  | 40  | 60  | 100           |
| 21DSPC309    | Data Structures and Algorithms Lab | - | -  | 3  | 40  | 60  | 100           |
|--------------|----------------------------------|----|----|----|-----|-----|---------------|
| 21DSBS401    | Discrete Mathematics             | 3  | -  | -  | 25  | 75  | 100           |
| 21DSES402    | Software Engineering             | 2  | -  | -  | 25  | 75  | 100           |
| 21DSPC403    | Database Technology              | 3  | -  | -  | 25  | 75  | 100           |
| 21DSPC404    | Operating Systems                 | 3  | -  | -  | 25  | 75  | 100           |
| 21DSPC405    | Data Science                     | 3  | -  | -  | 25  | 75  | 100           |
| 21DSPC406    | Python Programming               | 3  | -  | -  | 25  | 75  | 100           |
| 21DSPC407    | Universal Human Values           | 2  | 1  | -  | 25  | 75  | 100           |
| 21DSCP408    | Database Technology Lab          | -  | -  | 3  | 40  | 60  | 100           |
| 21DSCP409    | Operating System Lab             | -  | -  | 3  | 40  | 60  | 100           |
| 21DSCP410    | Data Science Lab                 | -  | -  | 3  | 40  | 60  | 100           |
|--------------|----------------------------------|----|----|----|-----|-----|---------------|

| Semester V                                                  |                      | L  | T  | P  | CA | FE | Total | C  | CP |
|-------------------------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|
| Course Code | Course Title                                 |                      |    |    |    |    |    |       |    |    |
|-------------|---------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|
| 21DSPC501   | Map Reduce Programming with Hadoop          |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPC502   | Data Visualisation                           |                      | 3  | 3  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPC503   | Machine Learning                             |                      | 3  | 3  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPC504   | Computer Networks                            |                      | 3  | 3  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPE505   | Professional Elective - I                    |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPE506   | Professional Elective - II                   |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSCP507   | Map Reduce Programming with Hadoop Lab      |                      | -  | -  | 3  | 40 | 60 | 100   | 1.5|    |
| 21DSCP508   | Data Visualisation Lab                       |                      | -  | -  | 3  | 40 | 60 | 100   | 1.5|    |
| 21DSCP509   | Machine Learning Lab                         |                      | -  | -  | 3  | 40 | 60 | 100   | 1.5|    |
|-------------|---------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|
| Total Credits:                                          |                      |    |    |    |    |    |       | 26.5|    |
|-------------------------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|

| Semester VI                                                 |                      | L  | T  | P  | CA | FE | Total | C  | CP |
|-------------------------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|
| Course Code | Course Title                                 |                      |    |    |    |    |    |       |    |    |
|-------------|---------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|
| 21DSPC601   | Data Analysis with R                         |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPC602   | Cloud Computing                              |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPE603   | Professional Elective - III                  |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPE604   | Professional Elective - IV                   |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSPE605   | Professional Elective - V                    |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21YYOE606   | Open Elective - I (Inter Department - FEAT)  |                      | 3  | -  | -  | 25 | 75 | 100   | 3  |    |
| 21DSCP607   | Data Analysis with R Lab                     |                      | -  | -  | 3  | 40 | 60 | 100   | 1.5|    |
| 21DSCP608   | Cloud Computing Lab                          |                      | -  | -  | 3  | 40 | 60 | 100   | 1.5|    |
|-------------|---------------------------------------------|----------------------|----|----|----|----|----|-------|----|----|
| Total Credits:                                          |
| Semester VII                                                |                      |            |        |     |   |    |       |   |    |
|------------------------------------------------------------|------------|--------|-----|---|----|-------|---|----|
| Course Code | Course Title                                 | L          | T      | P   | CA | FE | Total | C | CP |
|-------------|---------------------------------------------|------------|--------|-----|----|----|-------|---|----|
| 21ETHS701   | Ethics in Data Analytics                     | 2          | -      | -   | 25 | 75 | 100   | 2 |    |
| 21DSPC702   | Internet of Things(IoT)                      | 3          | -      | -   | 25 | 75 | 100   | 3 |    |
| 21DSPE703   | Professional Elective - VI                   | 3          | -      | -   | 25 | 75 | 100   | 3 |    |
| 21DSPE704   | Professional Elective - VII                 | 3          | -      | -   | 25 | 75 | 100   | 3 |    |
| 21YYOE705   | Open Elective - II (Inter Department- Allied Branch) | 3          | -      | -   | 25 | 75 | 100   | 3 |    |
| 21DSCP706   | Internet of Things(IoT) Lab                 | -          | -      | 3   | 40 | 60 | 100   | 1.5


PE – PROFESSIONAL ELECTIVES
1. Distributed systems
2. Data Engineering
3. Scala Programming
4. NoSQL databases
5. Data Storage Technologies
6. Optimization Techniques
7. Extract Transform & Load (ETL) Tools
8. Business Intelligence
9. Programming with Spark
10. Data Security
11. Web Analytics
12. GPU Computing
13. Mining for Big Data
14. Predictive Analytics
15. Text Analytics
16. Social Media Analytics
17. Real Time Analytics
18. Applied Econometrics & Time Series Analysis
19. Recommender Systems
20. Health care Analytics
21. Business Analytics

OE- OPEN ELECTIVES
1. Soft Computing
2. Mobile Application Development
3. Cyber Security
4. Big Data for Bio Informatics
5. Deep Learning
6. Information Retrieval
7. Block Chain Technology
8. Digital Forensics



LIST OF HONORS ELECTIVE COURSES

Course Code: 21DSHESCN
Course Name: Big Data Testing Tools
Credits: 4

Course Code: 21DSHESCN
Course Name: Big Data Analytics Tools
Credits: 4

Course Code: 21DSHESCN
Course Name: Data Management
Credits: 3

Course Code: 21DSHESCN
Course Name: Cognitive Computing
Credits: 3

Course Code: 21DSHESCN
Course Name: High Performance Big Data Analytics
Credits: 3

Course Code: 21DSHESCN
Course Name: Financial Analytics
Credits: 3

LIST OF MINOR ENGINEERING ELECTIVE COURSES

Course Code: 21DSMISCN
Course Name: Data Structures and Algorithms
Credits: 4

Course Code: 21DSMISCN
Course Name: Python Programming (or) Data Analysis with R
Credits: 4

Course Code: 21DSMISCN
Course Name: Data Science
Credits: 3

Course Code: 21DSMISCN
Course Name: Map Reduce Programming with Hadoop
Credits: 3

Course Code: 21DSMISCN
Course Name: Machine Learning (or) Mining for Big Data
Credits: 3

Course Code: 21DSMISCN
Course Name: NoSQL Databases
Credits: 3

MATHEMATICAL FOUNDATIONS OF DATA SCIENCE

Lecture Hours: 3
Tutorial Hours: 1
Practical Hours: 0
Credits: 4

Course Objectives :
1. To study the characteristics of a population through a sample of population with varieties.
2. To understand probability theory for investigating the important features of Random experiments.
3. To explain certain probability distribution useful in constructing probabilistic models for observed phenomena.
4. To describe the theory of sampling and the test of hypothesis.

Unit-wise Syllabus:
UNIT – I Introduction to Statistics
- Statistics: Classification, Graphical representation, Measures of central tendency, Measures of Dispersion.

UNIT – II Correlation and Regression
- Correlation and Regression, Rank correlation, Curve fitting using the method of least squares.

UNIT – III Probability Theory
- Probability Theory: Random Experiment, Axiomatic Definition of probability, Conditional probability, Independent Events.

UNIT – IV Probability distributions
- Probability Distributions: Discrete distributions (Binomial and Poisson), Continuous distributions (Uniform, Exponential, and Normal).

UNIT – V Test of Hypothesis
- Test of Hypothesis: Critical region, Level of significance, Confidence interval, Large sample tests, Small sample tests.

Text Books :
1. Veerarajan.T, “Probability, Statistics and Random Processes”, Tata McGraw Hill, 2014.
2. Kandasamy.P, Thilagavathy Kand Gunavathy.K, “Engineering Mathematics”, Volume II, S. Chand & co Ltd, 2006.

References :
1. Erwin Kreyszig, “Advanced Engineering Mathematics”, John Wiley & Sons, 9th Edition, 2010.
2. N.P.Bali and Manish Goyal, “A text book of Engineering Mathematics”, Laxmi Publication, 2012.
3. Ramana .B.V, “Higher Engineering Mathematics”, Tata McGraw Hill, 2016.

Course Outcomes :
1. Acquire the basic concepts about the characteristics of a population.
2. Understand the characteristics of data associated with two variables.
3. Investigate the important features of random experiments.
4. Identify and apply probability distributions in engineering and data analysis applications.
5. Explain the theory of sampling and measure the goodness of fit.

Environmental Studies

Course Code: 21ETES302

Lecture Hours: 3
Tutorial Hours: 0
Practical Hours: 0
Credits: 3

Course Objectives:
1. To study various types of resources such as forest, water, minerals, food, energy, and land.
2. To describe the structure and function of ecosystems.
3. To explain the value of biodiversity.
4. To increase awareness about different types of pollution and promote environmental protection.

Unit-wise Syllabus:
Unit – I Introduction to Environmental Studies
- Multidisciplinary nature, scope, and importance.
- Classification and graphical representation of statistics.
- Measures of central tendency and dispersion.

Unit – II Concept of an Ecosystem
- Structure and function of ecosystems.
- Energy flow, ecological succession, and food chains/webs/pyramids.
- Types of ecosystems: forest, grassland, desert, aquatic ecosystems.

Unit – III Biodiversity
- Definition and classification of biodiversity.
- Value and importance of biodiversity.
- Threats to biodiversity and conservation measures.

Unit – IV Types of Pollution
- Air, water, soil, marine, noise, thermal, and nuclear pollution.
- Solid waste management and disaster management.
- Environmental legislation and ethics.

Unit – V Environment and Human Health
- Population growth and health issues.
- Human rights, value education, and HIV/AIDS awareness.
- Information technology's role in environmental and health solutions.

Text Books:
1. Erach Bharucha, “Textbook of Environmental Studies”, University Press, 2005.
2. MP Poonia & SC Sharma, “Environmental Studies”, Khanna Publishing House, 2017.

References:
1. Rajagopalan, “Environmental Studies”, Oxford University Press, 2005.
2. Cunningham, W.P. et al., “Environmental Encyclopaedia”, Jaico Publ. House, 2001.

Course Outcomes:
1. Understanding of renewable and non-renewable resources and their impact on ecosystems.
2. Knowledge of ecological systems, their causes, and interrelationships.
3. Awareness of biodiversity conservation and threats.
4. Analysis of natural and man-made disasters, pollution causes, and mitigation strategies.
5. Designing solutions using information technology for environmental and health challenges.
Digital Electronics

Course Code: 21DSES303

Lecture Hours: 3
Tutorial Hours: 0
Practical Hours: 0
Credits: 3

Course Objectives:
1. Understanding semiconductor devices, transistors, amplifiers fundamentals.
2. Introduction to Boolean algebra laws and solving problems in combinational logic.
3. Basic concepts of memory and sequential logic circuits.
4. Explanation of ADC and DAC converters.
5. Memory organization and operation.

Unit-wise Syllabus:
Unit – I Digital Circuits- Introduction
- Digital signals, logic operations, Boolean algebra, and number systems.
- Characteristics of digital ICs and digital logic families.

Unit – II Standard Representation for Logic Function
- K-map representation, simplification of logic functions, and minimization techniques.
- Multiplexers, demultiplexers, adders, subtractors, ALU, and popular MSI chips.

Unit – III Flip Flops and Counters
- Bistable latch, flip-flops (SR, J-K, T, D-type), shift registers, counters, and special counter ICs.
- Applications of flip-flops, shift registers, and counters.

Unit – IV ADC and DAC Converters
- Digital-to-analog converters (weighted resistor, R-2R ladder) and their specifications.
Computer Organization

Course Code: 21DSES304

Lecture Hours: 2
Tutorial Hours: 0
Practical Hours: 0
Credits: 2

Course Objectives:
1. Understanding the basic structure of computers and control unit design.
2. Study of hierarchical memory system including cache memories and virtual memory.
3. Different ways of accessing I/O devices and standard I/O interfaces.
4. Concept of pipelining and superscalar operation.

Unit-wise Syllabus:
Unit – I Basic Structure of Computers
- Functional Units, bus structures, performance metrics, numbers, arithmetic operations.
- Memory operations, instruction sequencing, addressing modes, basic I/O operations.

Unit – II Basic Processing Unit
- Control of the Processor, execution of instructions, multiple bus organization.
- Hardwired control, micro programmed control, micro programming execution.

Unit – III Memory System
- Semiconductor RAM, ROM, cache memory principles, cache design elements.
- Virtual memory, memory management requirements, secondary storage devices.

Unit – IV I/O Organization
- Accessing I/O devices, programmed I/O, interrupts driven I/O, direct memory access.
- Buses, interface circuits, standard I/O interfaces (PCI, SCSI, USB), I/O Channels.

Unit - V Pipelining
- Data hazards, instruction hazards, data path and control considerations.
- Superscalar operation, performance considerations.

Text Books:
1. Carl Hamacher, Zvonko Vranesic, Safwat Zaky, “Computer Organization”, Tata McGrawHill Education Pvt. Ltd, 5th edition, 2011.
2. William Stallings, “Computer Organization and Architecture – Designing for Performance”, Pearson Education Ltd., 10th Edition, 2016.

References:
1. David A. Patterson and John L. Hennessy, “Computer Architecture – A Quantitative Approach”, Elsevier, 5th edition, 2012.
2. Hayes, J.P., “Computer Architecture and Organization”, Tata Mc-Graw Hill, 3rd Edition, 2012.

Course Outcomes:
1. Understanding functional units, bus organizations, and addressing modes.
2. Comparison of hardwired control and micro programmed control.
3. Analysis of RAM, ROM, cache memory, and virtual memory.
4. Identification of various I/O interfaces and their communication with computers.
5. Recognition of parallel processing and pipelining concepts in computers.
Object Oriented Programming

Course Code: 21DSPC305

Lecture Hours: 3
Tutorial Hours: 0
Practical Hours: 0
Credits: 3

Course Objectives:
1. Clear understanding of object-oriented concepts.
2. Basics of objects, classes, inheritance, and polymorphism.
3. Principles of packages and interfaces.
4. Exception handling and threading in application development.

Unit-wise Syllabus:
Unit – I Introduction to Object-Oriented Programming
- Traditional vs Object-Oriented approach, benefits, and applications.
- Characteristics of OOP languages, C++ basics, objects, classes, data hiding, namespaces, identifiers, control structures.

Unit – II Member Functions, Overloading, and Constructors
- Constructors, destructors, access specifiers, member functions, function overloading.
- Constructor overloading, inline functions, friend functions, operator overloading.

Unit – III Inheritance and Virtual Functions
- Concept of inheritance, types of inheritance, virtual functions, abstract classes, virtual base classes.

Unit – IV Object-Oriented Programming in Java
- Java characteristics, environment, source file structure, fundamental programming structures.
- Defining classes, constructors, method access specifiers, packages, interfaces.

Unit – V Threads and Multithreading in Java
- Thread life cycle, creating threads, synchronizing threads, inter-thread communication.
- Daemon threads, thread groups, differences between multithreading and multitasking.

Text Books:
1. Robert Lafore, "Object-Oriented Programming in C++", Sams Publication, 4th edition, 2002.
2. Balaguruswamy. E, “Programming with Java”, Tata McGraw-Hill Publication, 5th edition, 2014.

References:
1. Balaguruswamy.E, “Object-Oriented Programming with C++”, Tata McGraw-Hill Publication, 6th edition, 2013.
2. R.S. Salaria, “Mastering Object-Oriented Programming with C++”, Khanna Book Publishing, N.Delhi, 6th edition, 2016.

Course Outcomes:
1. Understand object-oriented programming concepts, data hiding, classes, and objects.
2. Apply argument passing, function overloading, operator overloading, constructors, and destructors.
3. Implement inheritance concepts and virtual functions in C++ programs.
4. Develop Java applications using constructors, method access specifiers, packages, and interfaces.
5. Build Java applications incorporating multithreading and exception handling.

Course Code: 21DSPC306

Data Structures and Algorithms

Lecture Hours: 3
Tutorial Hours: 1
Practical Hours: 0
Credits: 4

Course Objectives:
1. Understand various linear and non-linear data structures.
2. Analyze algorithms for runtime complexities and space requirements.
3. Apply data structures and algorithms for operations like storing, searching, hashing, etc.
4. Design, formulate, and implement solutions for real-time problems using data structures.

Unit-wise Syllabus:
Unit – I Introduction to Data Structures
- Data types, structures, abstract data types (ADTs), analysis of algorithms.
- Asymptotic notation, linked lists, stacks, queues, and their applications.

Unit – II Stacks, Trees, and Graphs
- Stacks, queues, trees, binary trees, binary search trees (BSTs), heaps, graphs.
- Graph representations, traversals, shortest path algorithms, minimal spanning tree.

Unit – III Sorting and Searching
- Classification of sorting algorithms, bubble sort, selection sort, insertion sort, merge sort, etc.
- Linear and binary search, hashing techniques, hash table ADT.

Unit – IV Greedy and Divide & Conquer Methods
- Greedy algorithms, strategy, advantages, and applications.
- Divide and conquer algorithms, visualization, advantages, and applications.

Unit – V Dynamic Programming and Backtracking
- Dynamic programming strategy, approaches, examples.
- Backtracking, 8 Queen’s Problem, Knapsack Problem.

Text Books:
1. Narasimha Karumanchi, “Data Structures and Algorithms Made Easy: Data Structures and Algorithmic Puzzles”, 5th Edition, Career Monk Publications, 2017.
2. Mark Allen Weiss, “Data Structures and Algorithm Analysis in C”, 2nd Edition, Pearson Education, 2002.

References:
1. Thomas H. Cormen et al., “Introduction to Algorithms”, Second Edition, Mcgraw Hill, 2002.
2. Aho, Hopcroft, and Ullman, “Data Structures and Algorithms”, Pearson Education, 1983.

Course Outcomes:
1. Understand data structures, data types, and algorithms and analyze their time complexity.
2. Implement abstract data types for linear structures like lists, stacks, and queues.
3. Apply trees, graphs, and other data structures to solve real-time problems effectively.
4. Implement standard algorithms for searching, sorting, etc., as per the problem requirements.
5. Choose suitable data structures for efficiently modeling information in problem-solving.
Course Code: 21DSSP307

Digital Electronics Lab

Practical Hours: 3

Course Objectives:
1. Study and experiment with semiconductor diodes and Zener diodes.
2. Estimate parameters of amplifiers, oscillators, and multivibrators.
3. Implement digital logic design using logic gates, flip-flops, multiplexers, and demultiplexers.
4. Verify the state table of flip-flops.

List of Exercises:
1. Characteristics of semiconductor diode.
2. Characteristics of Zener diode and its use as a voltage regulator.
3. Estimation of ripple factor and efficiency in rectifiers.
4. Characteristics of CE PNP and NPN transistors.
5. Frequency response of RC coupled amplifiers.
6. Estimation of gain and efficiency in class B power amplifiers.
7. Measurement of frequency in RC phase shift oscillators.
8. Estimation of the frequency in Bistable Multivibrators.
9. Verification of truth tables of logic gates.
10. Reduction of variables using K-Map.
11. Study of multiplexers and demultiplexers.
12. Verification of the state table of RS/JK flip-flops.

Course Outcomes:
1. Analyze characteristics of diodes, rectifiers, transistors, oscillators, and multivibrators.
2. Implement digital logic circuits using various components.
3. Demonstrate programming skills in solving real-world problems.
4. Answer viva questions related to programming skills effectively.

---

Course Code: 21DSCP308

Object-Oriented Programming Lab

Practical Hours: 3

Course Objectives:
1. Learn object-oriented design principles using C++ and Java.
2. Develop applications using Object-Oriented Programming Concepts.
3. Implement features of Object-Oriented programming to solve real-world problems.
4. Create packages, interfaces, and threads in Java.

List of Exercises:
1. Static function to display the number of objects created in a class.
2. Finding the maximum of two numbers using a friend function.
3. Copy constructor usage to copy data between objects.
4. Complex numbers addition and multiplication using operator overloading.
5. Inheritance and polymorphism implementation in C++.
6. Using the 'this' pointer in C++.
7. Illustrating virtual function usage in a class.
8. Data conversion between objects of different classes.
9. Simple Java applications and string handling.
10. Creating user-defined packages in Java.
11. Implementing user-defined interfaces and predefined exceptions.
12. Threading and exception handling in Java.

Course Outcomes:
1. Design algorithms using C++ for data abstraction, encapsulation, inheritance, etc.
2. Apply concepts like interfaces, multithreading, and exceptions in Java programming.
3. Demonstrate programming skills through real-world problem-solving.
4. Effectively answer viva questions related to programming skills.
Course Code: 21DSCP309

Data Structures and Algorithms Lab

Practical Hours: 3

Course Objectives:
1. Understand and implement linear data structures like linear lists, stacks, and queues.
2. Implement non-linear data structures such as trees and graphs.
3. Apply algorithms for sorting, searching, and other operations using data structures.
4. Study algorithm design methods like greedy methods, divide and conquer, dynamic programming, and backtracking.

List of Exercises (C++ Programming):
1. Stack operations: Insertion and deletion.
2. List operations: Insert, delete, update, reverse.
3. Queue operations: Insertion and deletion.
4. Binary Search in an array using iteration and recursion.
5. Graph traversing techniques simulation.
6. Binary Search Tree implementation.
7. Bubble sort algorithm simulation.
8. Separate chaining in hashing for collision handling.
9. Heaps using Priority Queues implementation.
10. Quick sort algorithm demonstration.
11. Dijkstra's shortest path algorithm using Dynamic Programming.
12. N-Queens problem using backtracking approach.
13. Selection sort algorithm illustration.

Course Outcomes:
1. Develop C++ programs for basic data structures like stacks, queues, and lists.
2. Implement searching and sorting algorithms using iteration and recursion.
3. Demonstrate programming skills through real-world problem-solving.
4. Effectively answer viva questions related to programming skills.
Course Code: 21DSBS401

Discrete Mathematics

Lecture Hours: 3

Course Objectives:
1. Study finite mathematical structures essential for understanding Computer Science concepts.
2. Learn operations on sets and relations.
3. Understand graph representation methods and algorithms.
4. Gain knowledge of Automata theory and formal languages for applications in Computer Science.

Unit – I: Mathematical Logic
- Propositions, connectives, tautology, contradiction
- Equivalence of propositions, tautological implication
- Normal forms, theory of inference, rules of inference

Unit – II: Set Theory and Relations
- Set operations, ordered pairs, Cartesian product
- Types of relations, operations on relations, properties
- Equivalence classes, partition of set
- Matrix and graphical representation of relations

Unit – III: Graph Theory
- Graphs, special simple graphs
- Matrix representation, path cycles, connectives
- Eulerian and Hamiltonian graphs
- Shortest path algorithms

Unit – IV: Finite Automata
- Representation, language accepted
- Non-deterministic finite automata (NFA)
- Acceptability of string by NFA
- Equivalence of FA and NFA

Unit – V: Grammar
- Phrase-structure grammar, derivation
- Regular and context-free grammar
- Derivation trees, normal forms

Text Books:
1. Veerarajan T, “Discrete Mathematics with Graph Theory and Combinatorics”, Tata McGraw Hill Publishing Company Ltd, 2014.
2. Venkataraman M. K, “Discrete Mathematics Structures”, the National Publishing Company, 2008.

References:
1. Kolman Busby Ross, “Discrete Mathematical Structures”, Pearson Education Pvt. Ltd., 2000.
2. Trembley J P and Manohar R P, “Discrete Mathematical Structures with Applications to Computer Science”, Tata McGraw-Hill Publishing Company Ltd, 2005.

Course Outcomes:
1. Understand Mathematical Logic and theory of inferences.
2. Apply Set theory, Relations, and matrix representation.
3. Implement Lattice theory and Boolean Algebra in circuit design.
4. Design coding and encoding group codes.
5. Comprehend Graph theory concepts including Eulerian and Hamiltonian graphs.
Course Code: 21DSES402

Software Engineering

Lecture Hours: 2

Course Objectives:
1. Understand the phases of software project development.
2. Learn about enterprise integration and deployment concepts in requirements engineering and analysis modeling.
3. Study various testing, maintenance measures, and risk management methods.
4. Learn about software quality management and configuration management concepts.

Unit – I: Introduction to Software Process
- Generic process model
- Perspective and specialized process models
- Agile development and extreme programming
- Requirements engineering and analysis modeling

Unit – II: Design Concepts
- Design process and concepts
- Architectural design and component-level design
- User interface design and web application design

Unit – III: Quality Management
- Software quality and achieving software quality
- Review techniques and software quality assurance
- Test strategies and system testing

Unit – IV: Configuration Management
- SCM repository and process
- Configuration management for web apps
- Metrics for requirements and design models
- Project management concepts and metrics

Unit – V: Software Project Estimation
- Decomposition techniques and empirical estimation models
- Project scheduling and risk management strategies
- Business process reengineering and software reengineering
- SPI process, CMMI, and SPI trends

Text Books:
1. Roger S. Pressman, “Software Engineering – A Practitioner’s Approach”, Mc Graw-Hill International Edition, Seventh Edition, 2010.
2. K.K. Aggarwal & Yogesh Singh, “Software Engineering”, New Age International, 2nd edition, 2006.

References:
1. Ian Sommerville, “Software Engineering”, Pearson Education Asia, 9th Edition, 2011.
2. Rajib Mall, “Fundamentals of Software Engineering”, PHI Learning Private Limited, Third Edition, 2009.

Course Outcomes:
1. Understand software project models and development phases.
2. Analyze strategies for software designing.
3. Recognize the importance of various software testing methods.
4. Explore management methods in software development projects.
5. Acquire knowledge about risk management in software engineering.
Course Code: 21DSPC403

Database Technology

Credit Hours: 3

Course Objectives:
1. Understand fundamental DBMS concepts, E-R Diagrams, Relational model, and SQL.
2. Learn about various Normal Forms in database design.
3. Gain knowledge of transaction management and Query processing fundamentals.
4. Get introduced to current trends in database technologies.

Unit – I: Introduction
- Differences between File System and DBMS
- Views of data
- Data Models
- Database Languages
- DBMS Services
- System Architecture
- Data Dictionary
- Entity-Relationship (E-R) Model
- Enhanced Entity-Relationship Model

Unit – II: Relational Approach
- Relational Model
- Relational Data Structure and Integrity
- Domain Constraints
- Entity Integrity
- Referential Integrity
- Operational Constraints
- Keys
- Relational Algebra
- Relational Calculus (Tuple and Domain)
- SQL (Structured Query Language)
- Set Operations
- Aggregate Functions
- Null values
- Nested Subqueries
- Derived Relations
- Views
- Modification of the database
- Joined Relations
- Data Definition Language
- Triggers

Unit – III: Database Design
- Functional Dependencies
- Pitfalls in Relational Database Design
- Decomposition
- Normalization using Functional Dependencies
- Normalization using Multi-valued Dependencies
- Normalization using Join Dependencies
- Domain-Key Normal Form (DK/NF)

Unit – IV: Query Processing and Transaction Management
- Query Processing Overview
- Estimation of Query Processing Cost
- Join strategies
- Transaction Processing Concepts and States
- Implementation of Atomicity and Durability
- Concurrent Executions
- Serializability
- Implementation of Isolation
- Testing for Serializability
- Concurrency control
- Lock-Based Protocols
- Timestamp-Based Protocols

Unit – V: Trends in Database Technologies
- Distributed Databases (Homogeneous and Heterogeneous)
- Distributed Data Storage
- Distributed Transactions
- Commit Protocols
- Concurrency Control in Distributed Databases
- Availability
- Distributed Query Processing
- Heterogeneous Distributed Databases
- Cloud-Based Databases
- Directory Systems

Text Books:
1. Abraham Silberschatz, Henry F. Korth, S. Sudharshan, “Database System Concepts”, Tata McGraw Hill, Sixth Edition, 2010.
2. Ramez Elmasri, Shamkant B. Navathe, “Fundamentals of Database Systems”, Addison Wesley, Sixth Edition, 2010.

References:
1. Raghu Ramakrishnan, Johannes Gehrke, “Database Management Systems”, McGraw Hill, Third Edition, 2002.
2. Peter Rob and Carlos Coronel, “Database Systems – Design, Implementation and Management”, Thompson Learning, Course Technology, Seventh Edition, 2006.

Course Outcomes:
1. Understand fundamental DBMS concepts and develop ER Models.
2. Build SQL Queries for data creation and manipulation operations.
3. Apply normalization concepts to normalize a database.
4. Identify and address issues related to Query processing and Transaction management.
5. Analyze trends in modern database technologies including data storage, query processing, and concurrency control.
Course Code: 21DSPC404

Operating Systems

Credit Hours: 3

Course Objectives:
1. Provide an overview of operating systems, their structure, and operations.
2. Understand process management concepts.
3. Impart knowledge on storage and I/O systems management.
4. Learn about internal features of LINUX OS and virtualization.

Unit – I: Operating Systems Overview
- Computer System Overview
- Operating system objectives and functions
- Evolution of Operating System
- Operating System Structure and Operations
- System Calls and System Programs
- OS Generation and System Boot

Unit – II: Process Management
- Processes and Process Scheduling
- Interprocess Communication
- Threads and Multithreading Models
- Process Synchronization
- CPU Scheduling and Deadlocks

Unit – III: Storage Management
- Main Memory and Virtual Memory
- Contiguous Memory Allocation
- Segmentation and Paging
- Demand Paging and Page Replacement
- Allocating Kernel Memory
- I/O Systems and Mass Storage Structure

Unit – IV: I/O Systems
- Disk Scheduling and Management
- File System Storage and Implementation
- File System Structure and Allocation Methods
- I/O Systems and File Management

Unit – V: Case Study
- Linux System Basics
- System Administration Requirements
- Setting up a LINUX Multifunction Server
- Virtualization Basics and Setting Up Xen/VMware

Text Books:
1. Abraham Silberschatz, Peter Baer Galvin, Greg Gagne, “Operating System Concepts”, John Wiley and Sons Inc., 9th Edition, 2012.
2. William Stallings, “Operating Systems – Internals and Design Principles”, Prentice Hall, 7th Edition, 2011.

References:
1. Andrew S. Tanenbaum, “Modern Operating Systems”, Addison Wesley, Second Edition, 2001.
2. Charles Crowley, “Operating Systems: A Design-Oriented Approach”, Tata McGraw Hill Education, 1996.
3. D M Dhamdhere, “Operating Systems: A Concept-Based Approach”, Tata McGraw-Hill Education, Second Edition, 2007.
4. Robert Love, “Linux Kernel Development”, Addison-Wesley, 3rd Edition, 2010.
5. NPTEL Course Material

Course Outcomes:
1. Explain types of operating systems and perform case studies on UNIX and Windows OS.
2. Understand process state, Threads, and compare process scheduling algorithms.
3. Illustrate concepts of Critical Section, semaphores, IPC, and develop Banker's algorithm for deadlock detection.
4. Summarize page management techniques and select appropriate page replacement algorithms.
5. Discuss I/O hardware, software, file, and directory management, and develop disk scheduling algorithms.
Course Code: 21DSPC405

Data Science

Credit Hours: 3

Course Objectives:
1. Study the concepts of data science.
2. Learn mechanisms for data storage, wrangling, and aggregation.
3. Understand high-dimensional space and singular value decomposition.
4. Acquire knowledge of algorithms for massive data problems and random graphs.

Unit – I: Introduction
- Arrays and Vectorized Computation
- Multidimensional Array object
- Data Structures: Series, Data Frame, Index Objects
- Essential Functionality: Descriptive Statistics, Handling Missing Data, Hierarchical Indexing

Unit – II: Data Storage and Wrangling
- Data Loading, Storage, File Formats
- Interacting with HTML, Web API, and databases
- Data Wrangling: Cleaning, Transformation, Merging, Reshaping, String Manipulation

Unit – III: Plotting and Data Aggregation
- Plotting and visualization: Line plots, bar plots, histograms, scatter plots
- Data Aggregation and Group Operations: Group by Mechanisms, Pivot Tables, Cross Tabulation

Unit – IV: High Dimensional Space and Singular Value Decomposition
- Geometry of high dimensions, Properties of the Unit Ball, Random projection
- Singular Value Decomposition (SVD): Singular vectors, Best rank k-Approximations

Unit – V: Algorithms for Massive Data Problems and Random Graphs
- Frequency Moments of data streams, Matrix algorithms using Sampling
- Random Graphs: G(n,p) model, Phase transitions, Giant component, Branching processes

Text Books:
1. Wes McKinney, “Python for Data Analysis”, O’Reilly, First Edition, 2012.
2. Avrim Blum, John Hopcroft, Ravindran Kannan, “Foundations of Data Science”, Cambridge University Press, 2018.

References:
1. Joel Grus, “Data Science from Scratch”, O’Reilly, First Edition, 2015.
2. Jake VanderPlas, “Python Data Science Handbook”, O’Reilly, First Edition, 2016.
3. Samir Madhavan, “Mastering Python for Data Science”, PACKT Publishing, 2015.
4. Alberto Boschetti, Luca Massaron, “Python Data Science Essentials”, PACKT Publishing, Third Edition, 2018.
5. Gopi Subramanian, “Python Data Science Cookbook”, PACKT Publishing, 2015.

Course Outcomes:
1. Describe suitable data structures for handling data.
2. Apply data cleaning and transformation techniques.
3. Create simple visualization plots.
4. Apply Singular Value Decomposition in high-dimensional data.
5. Explain algorithms for massive data problems and random graphs.
Course Code: 21DSPC406

Python Programming

Credit Hours: 3

Course Objectives:
1. Understand variables, conditionals, loops, recursion, and function calls in Python.
2. Use basic data structures like List, Dictionary, and manipulate text files and images.
3. Learn object-oriented concepts in Python.
4. Acquire skills in database and GUI programming through Python.

Unit – I: Introduction
- Elementary Programming, Selections, and Loops
- Identifiers, Variables, Assignment Statements
- Numeric Data Types and Operators
- Boolean Types and Expressions
- if Statements, Logical Operators
- Loops: while, for, Nested Loops
- Case Studies: Computing Body Mass Index, Displaying Prime Numbers

Unit – II: Python Function
- Built-in Functions, Strings, Characters
- User-Defined Functions, Function Arguments
- Modularizing Code, Default Arguments, Return Values
- Function Abstraction, Stepwise Refinement
- Case Study: Generating Random ASCII Characters

Unit – III: Class and Object
- Introduction to Object-Oriented Programming
- Class definition, Inheritance, Composition
- Operator Overloading, Object creation
- Special properties of classes, Slots, Private attributes

Unit – IV: Files and Exception Handling
- Text Input/Output, File Dialogs
- Exception Handling, Custom Exception Classes
- Binary IO Using Pickling
- Client-Server Architecture, Network Programming

Unit – V: Database and GUI
- DBM and SQL databases
- GUI Programming using Tkinter
- Widget Classes, Canvas, Menus
- Event Processing, Dialog Boxes
- Animations, Scrollbars, Grids

Text Books:
1. Mark Lutz, “Learning Python, Powerful OOPs”, O’Reilly, 2011.
2. Guttag, John, “Introduction to Computation and Programming Using Python”, MIT Press, 2013.

References:
1. Jennifer Campbell et al., “Practical Programming an Introduction to Computer Science Using Python”, The Pragmatic Bookshelf, 2009.
2. Wesley J Chun, “Core Python Applications Programming”, Prentice Hall, 2012.
3. Jeeva Jose, “Taming Python by Programming”, Khanna Publishing House, 1st edition, 2017.

Course Outcomes:
1. Understand basic programming concepts in Python.
2. Solve complex problems using modular programming.
3. Apply object-oriented programming concepts.
4. Develop applications for file handling and network communication.
5. Create GUI-based programs for data storage and retrieval.

Course Code: 21ETHS407

Course Title: Universal Human Values

Credit Hours: 3

Course Objectives:
1. Develop a holistic perspective through self-exploration about oneself, family, society, and nature/existence.
2. Understand and achieve clarity on harmony in human relationships and existence.
3. Strengthen self-reflection and foster the development of commitment and courage to act ethically.

Course Structure:

Unit-I: Course Introduction
- Purpose, motivation, and guidelines for the course
- Self-exploration, natural acceptance, and experiential validation
- Understanding basic human aspirations and requirements for fulfillment
- Living in harmony at various levels

Unit-II: Harmony in the Human Being
- Understanding the sentient 'I' and the material 'Body'
- Needs of Self and Body, Sanyam, and Health
- Harmony of 'I' with the Body, including programs for Sanyam and Health

Unit-III: Harmony in Family and Society
- Values in human-human relationships, focusing on Justice, Trust, and Respect
- Harmony in society and comprehensive Human Goals
- Visualizing a universal harmonious order in society

Unit-IV: Harmony in Nature and Existence
- Understanding harmony in Nature and interconnectedness among different elements
- Holistic perception of harmony at all levels of existence

Unit-V: Implications on Professional Ethics
- Natural acceptance of human values and ethical conduct
- Basis for Humanistic Education and Humanistic Universal Order
- Competence in professional ethics and eco-friendly practices
- Strategy for transition towards Universal Human Order

Text Book:
1. Human Values and Professional Ethics by R R Gaur, R Sangal, G P Bagaria, Excel Books, New Delhi, 2010.

References:
1. Jeevan Vidya: Ek Parichaya, A Nagaraj, Jeevan Vidya Prakashan, Amarkantak, 1999.
2. Human Values, A.N. Tripathi, New Age Intl. Publishers, New Delhi, 2004.
3. The Story of Stuff (Book).

Course Outcomes:
By the end of the course, students are expected to:
1. Develop a deeper awareness of themselves, their surroundings, and human relationships.
2. Demonstrate enhanced critical thinking abilities and responsibility in handling ethical dilemmas.
3. Exhibit sensitivity and commitment towards human values and ethical conduct.
4. Apply learned values and principles in real-life situations.
5. Prepare for higher-level courses on human values and ethics in professional settings.
Course Code: 21DSCP408

Course Title: Database Technology Lab

Credit Hours: 3

Practical Hours: 3

Course Objectives:
1. Understand fundamental database concepts and the relational data model.
2. Construct SQL queries for data manipulation and retrieval.
3. Apply logical database design principles, including E-R diagrams and normalization.
4. Design and implement a small-scale database project.

List of Exercises:
1. Implementation of queries for student database.
2. Data Definition Language (DDL) with constraints.
3. Data Manipulation Language (DML) - Insert, Delete, Update, Select, and Truncate.
4. Transaction Control Statements - Commit, Savepoint, Rollback.
5. Data Control Statements - Grant, Revoke.
6. Data Projection Statements - Multi-column, alias names, arithmetic operations, Distinct records, concatenation, Where clause.
7. Data Selection Statements - Between, AND, NOT IN, LIKE, relational and logical operators.
8. Aggregate functions - COUNT, MAX, MIN, SUM, AVG, ORDER BY, GROUP BY, HAVING.
9. Join queries - Inner join, Outer join, Self join, Cartesian join, Cross join.
10. Subqueries - IN, NOT IN, SOME, ANY, ALL, EXISTS, NOT EXISTS.
11. Set operations - UNION, UNION ALL, INTERSECT, MINUS.
12. Database objects - Synonym, Sequences, Views, Index.
13. Cursors.
14. Functions and Procedures in PL/SQL.
15. Triggers.
16. Handling Exceptions.
17. Using Packages.
18. Implementing Factorial of a number.
19. Checking prime numbers.
20. Generating Fibonacci series.

Course Code: 21DSCP409

Course Title: Operating Systems Lab

Credit Hours: 0

Practical Hours: 3

Course Objectives:
1. Understand fundamental concepts, techniques, and management of operating systems.
2. Differentiate Operating System features from structured design principles.
3. Use UNIX as a modeling and communication utility.
4. Apply process steps to enhance software development.

List of Exercises:
1. Job scheduling techniques.
2. Disk scheduling techniques.
3. Memory allocation techniques.
4. Memory management techniques.
5. Page replacement techniques.
6. Producer-consumer problem.
7. Bankers’ algorithm.
8. Dining Philosophers problem.
9. Write a shell script to perform file operations using UNIX commands.
10. Write a shell script to use basic UNIX utilities.
11. Write a shell script to arrange 'n' numbers using 'awk'.
12. Write a shell script for calculating nCr using recursion.
13. Write a shell script to sort numbers and alphabetic characters from a text file using 'awk'.
14. Write a shell script to display files accessed in the last 10 days and list files based on size.
15. Write a shell script to display numbers between 1 and 9999 in words.
16. Write a shell script for checking Palindrome.

Course Outcomes:
Upon completion of this course, students will be able to:
1. Develop C programs for job scheduling, disk scheduling, memory management, and synchronization.
2. Write shell scripts to practice UNIX commands and utilities effectively.
3. Demonstrate proficiency in answering viva questions related to programming skills for solving real-world problems in Computer Science and Engineering.

Course Code: 21DSCP410

Course Title: Data Science Lab

Credit Hours: 1.5

Practical Hours: 3

Course Objectives:
1. Implement data science concepts through Python programs.
2. Load and display various types of data in different formats for better comprehension.
3. Learn data collection, exploration, cleaning, munging, and manipulation techniques.
4. Understand the application of statistics and probability in data science.

List of Exercises:
1. Study Python Data Science Environment (NumPy, SciPy, matplotlib, Pandas, Scikit-learn).
2. Perform operations on Python Data Structures.
3. Read data from various sources (Text files, CSV files, Excel files, HTML/XML files, JSON files).
4. Explore data using visualization tools like charts and graphs with matplotlib.
5. Perform data cleansing operations to handle missing data.
6. Perform data wrangling operations (Filtering, Pivoting dataset, Melting Shifted Datasets, Merging Melted data, Concatenating data, Exporting Data).
7. Perform data aggregation (Grouping, Group-wise operations, and transformations).
8. Perform data transformations (Rescaling and Dimensionality Reduction).
9. Measure Central Tendency, Variability, and Correlation.
10. Create, Plot, and Understand Probability Distributions.
11. Perform Hypothesis Testing.
12. Create and Display Geographic Maps.
13. Handle Graph Data.
14. Create and Display Heat Maps.
15. Develop a simple spam filter application.

Course Outcomes:
Upon completion of this course, students will be able to:
1. Experiment with various data structures and libraries in Python for data science programming.
2. Conduct statistical measurements, hypothesis testing, and tests on data.
3. Develop practical applications covering Data Science concepts.
Course Code: 21DSPC501

Course Title: MapReduce Programming with Hadoop

Credit Hours: 1.5

Course Objectives:
1. Acquire the basics of Hadoopv2 configuration and administration.
2. Understand MapReduce design patterns including summarization, filtering, data organization, join, output, and Meta patterns.
3. Develop MapReduce applications.
4. Solve real-time problems using MapReduce such as analytics, classifications, finding relationships, marketing recommendations, text data processing, and searching.

Unit I: Hadoopv2 Configuration and Administration
- Introduction to Hadoop v2
- Setting up Hadoop v2 in a local machine
- Word Count MapReduce application
- Hadoop local mode
- Adding a combiner step to Word Count
- Setting up HDFS and Hadoop YARN in a distributed cluster environment
- Hadoop ecosystem setup in a distributed cluster environment
- HDFS command-line file operations
- Running programs in a distributed cluster environment
- Using Hadoop YARN on Cloud Environments
- Hadoop Configurations, Unit Tests, and APIs

Unit II: MapReduce Design Patterns I
- Summarization Patterns
- Filtering Patterns
- Data Organization Patterns
- Structured to Hierarchical transformation
- Partitioning and Binning
- Total Order Sorting and Shuffling

Unit III: MapReduce Design Patterns II
- Join Patterns
- Reduce Side Join and Replicated Join
- Composite Join and Cartesian Product
- Meta patterns like Job Chaining and Chain Folding
- Input and Output Patterns including Customizing Input and Output

Unit IV: Developing Complex MapReduce Applications
- Hadoop data types
- Custom Hadoop Writable data type
- Emitting data from Mapper
- Hadoop InputFormat and OutputFormats
- Writing multiple outputs
- Intermediate data partitioning and Secondary sorting
- Using Hadoop with legacy applications and Hadoop streaming
- Adding dependencies between MapReduce jobs
- Using Hadoop counters to report custom metrics

Unit V: Analytics and Applications Using MapReduce
- Simple analytics using MapReduce
- GROUP BY operations
- Frequency distributions, histograms, and scatter plots
- Parsing complex datasets
- Applications such as content-based recommendations, classifications, and data preprocessing

Textbooks:
1. "Hadoop MapReducev2 Cookbook" by Thilina Gunarathne, Second Edition, Packt Publishing Ltd., 2015.
2. "MapReduce Design Patterns" by Donald Miner and Adam Shook, First Edition, O’Reilly Media Inc., 2012.

References:
1. "Hadoop Beginner's Guide" by Garry Turkington, First Edition, Packt Publishing Ltd., 2013.
2. "Hadoop: The Definitive Guide" by Tom White, Fourth Edition, O’Reilly Media Inc., 2015.
3. "Professional Hadoop® Solutions" by Boris Lublinsky, Kevin T. Smith, Alexey Yakubovich, First Edition, Wrox, 2013.
4. "Instant MapReduce Patterns – Hadoop Essentials How-to" by Srinath Perera, First Edition, Packt Publishing Ltd., 2013.
5. "Programming Elastic MapReduce" by Kevin Schmidt and Christopher Phillips, First Edition, O’Reilly Media Inc., 2013.

Course Outcomes:
1. Configure and administer Hadoop v2, Hadoop YARN, and HDFS clusters.
2. Design and develop MapReduce patterns for various data processing tasks.
3. Solve large-scale analytics problems and real-time data processing tasks using MapReduce.
4. Apply MapReduce techniques to solve complex problems in data science and analytics.
Course Code: 21DSPC502

Course Title: Data Visualization

Credit Hours: 3

Course Objectives:
1. Understand the concepts and significance of data visualization.
2. Learn visualization idioms and map data attributes to graphical attributes.
3. Evaluate the effectiveness of visualization designs.
4. Comprehend considerations in information dashboard design.

Unit I: Introduction
- Definition and importance of data visualization
- Data abstraction and semantics
- Task abstraction and analysis

Unit II: Analysis
- Validation levels and approaches
- Marks and channels in visualization
- Channel effectiveness and design rules

Unit III: Tables and Spatial Data
- Arranging data by keys and values
- Expressing quantitative and categorical data
- Handling spatial data and geometry

Unit IV: Networks, Trees, Map Color
- Connection and containment in network visualization
- Color theory and effective use of color in visualization
- Data reduction techniques and changing viewpoints

Unit V: Information Dashboard Design
- Purpose and importance of dashboards
- Common mistakes and considerations in dashboard design
- Visual perception and cognition in dashboard design

Textbooks:
1. "Visualization Analysis and Design" by Tamara Munzner, CRC Press, 2014.
2. "Information Dashboard Design: Displaying Data for At-a-glance Monitoring" by Stephen Few, Analytics Press, Second Edition, 2013.

References:
1. "Visualizing Data" by Ben Fry, O’Reilly, 2008.
2. "Data Visualization: A Successful Design Process" by Andy Kirk, PACKT Publishing, 2012.
3. "Data Visualization Principles and Practice" by Alexander Telea, CRC Press, Second Edition, 2014.
4. "Beautiful Visualization: Looking at Data through the Eyes of Experts" by Julia Steele and Noah Ilinsky, O’Reilly, 2010.
5. "Learning QlikView Data Visualization" by Karl Pover, PACKT, 2013.
6. "Show Me the Numbers: Designing Tables and Graphs to Enlighten" by Stephen Few, Analytics Press, Second Edition, 2012.

Course Outcomes:
1. Design and create effective data visualizations.
2. Apply data transformations such as aggregation and filtering for visualization.
3. Evaluate and choose suitable color schemes and visual encodings for effective visualization.
4. Build visual presentations of a wide variety of data for clear and effective communication.
5. Utilize knowledge of perception and cognition to design informative and user-friendly information dashboards.

Course Code: 21DSPC503

Course Title: Machine Learning

Credit Hours: 3

Course Objectives:
1. Introduce fundamental concepts of machine learning and its applications.
2. Learn classification, clustering, and regression-based machine learning algorithms.
3. Understand deep learning architectures.
4. Apply machine learning techniques to solve real-life problems.

Unit I: Bayesian Decision Theory and Normal Distribution
- Machine perception and feature extraction
- Classification, clustering, linear and logistic regression
- Bayesian decision theory, classifiers, discriminant functions
- Univariate and multivariate normal densities
- Bayesian belief networks

Unit II: Classification Algorithms
- Perceptron, backpropagation neural network
- K-nearest-neighbor rule
- Support vector machine (SVM), multi-category generalizations
- Regression, decision trees, random forest

Unit III: Component Analysis and Clustering Algorithms
- Principal component analysis (PCA)
- Linear discriminant analysis (LDA)
- Independent component analysis (ICA)
- K-means clustering, fuzzy k-means clustering
- Expectation-maximization algorithm (EM)
- Gaussian mixture models (GMM), auto-associative neural network

Unit IV: Deep Learning Architectures and Applications
- Convolutional neural network (CNN), layers in CNN, CNN architectures
- Recurrent neural network (RNN)
- Applications: speech-to-text conversion, image classification, time series prediction

Unit V: Combining Multiple Learners
- Generating diverse learners
- Model combination schemes: voting, bagging, boosting, mixture of experts
- Stacked generalization, fine-tuning an ensemble, cascading

Textbooks:
1. "Deep Learning with Python" by Francois Chollet, Manning Publications, 2018.
2. "Pattern Classification" by R. O. Duda, E. Hart, and D.G. Stork, John Wiley & Sons, 2012.

References:
1. "Introduction to Machine Learning" by Ethem Alpaydin, MIT Press, 2014.
2. "Pattern Recognition and Machine Learning" by C. M. Bishop, Springer, 2006.
3. "Machine Learning: A Probabilistic Perspective" by Kevin P. Murphy, MIT Press, 2012.
4. "Deep Learning with Applications using Python" by Navin Kumar Manaswi, Apress, 2018.

Course Outcomes:
1. Understand Bayesian theory and normal densities.
2. Implement classification algorithms in machine learning.
3. Implement clustering and component analysis techniques.
4. Design and implement deep learning architectures for real-life problem-solving.
5. Combine evidence from multiple models/methods for system design.

Course Code: 21DSPC504

Course Title: Computer Networks

Credit Hours: 3

Course Objectives:
1. Develop an understanding of modern network architectures from a design and performance perspective.
2. Introduce major concepts in wide-area networks (WANs), local area networks (LANs), and Wireless LANs (WLANs).
3. Provide an opportunity to engage in network programming.
4. Introduce WLAN measurement concepts.

Unit I: Data Communication Components
- Data representation and flow in networks
- Connection topology, protocols, and standards
- OSI model overview
- Transmission media
- LAN types: wired and wireless
- Bandwidth utilization techniques: multiplexing, spread spectrum concepts

Unit II: Data Link Layer and Medium Access Sub Layer
- Error detection and correction methods
- Flow control and error control protocols
- Multiple access protocols: Pure ALOHA, Slotted ALOHA, CSMA/CD, CDMA/CA

Unit III: Network Layer
- Switching techniques
- Logical addressing: IPv4, IPv6
- Address mapping: ARP, RARP, BOOTP, DHCP
- Routing protocols: Unicast routing, delivery, forwarding

Unit IV: Transport Layer and Application Layer
- Process-to-process communication
- Transport protocols: UDP, TCP, SCTP
- Quality of Service (QoS) concepts and techniques
- Application layer protocols: DNS, TELNET, EMAIL, FTP, HTTP, SNMP, Bluetooth

Unit V: Services Mechanism
- OSI security architecture overview
- Classical encryption techniques
- Finite Fields and Number Theory: Groups, Rings, Fields, Modular arithmetic
- Cryptography basics: Substitution, transposition techniques, steganography

Textbooks:
1. "Data and Computer Communication" by William Stallings, Pearson Prentice Hall India, 10th Edition, 2013.
2. "Cryptography and Network Security: Principles and Practice" by William Stallings, 5th Edition, PHI, 2006.

References:
1. "Data Communication and Networking" by Behrouz A. Forouzan, McGraw-Hill, 4th Edition.
2. "Computer Networks" by Andrew S. Tanenbaum, Pearson New International Edition, 8th Edition.

Course Outcomes:
1. Explain the functions of OSI Protocol layers.
2. Describe the functional block diagram of WANs, LANs, and WLANs.
3. Design small-scale WANs, LANs, and WLANs based on market-available components.
4. Develop network programming solutions related to TCP/IP protocol.
5. Configure DNS, DDNS, TELNET, EMAIL, FTP, HTTP, SNMP, Bluetooth, Firewalls using open-source tools.
Course Code: 21DSCP507

Course Title: MapReduce Programming with Hadoop Lab

Credit Hours: 1.5

Practical Hours: 3

Course Objectives:
1. Learn to set up standalone Hadoopv2 on a local machine, Hadoop YARN, Hadoop ecosystem in a distributed cluster environment, and HDFS.
2. Gain knowledge in executing Hadoop MapReducev2 computations in standalone and distributed environments.
3. Understand running Hadoop MapReducev2 computations using Amazon Elastic MapReduce (EMR).
4. Perform simple analytics, mass text data processing, and develop applications like classifications, recommendations, and relationship finding.

List of Exercises:
1. Study on setting up standalone Hadoopv2 and Hadoop YARN.
2. Write a MapReduce application to count word occurrences and run it in Hadoop local mode.
3. Write a MapReduce application to count word occurrences and run it in a distributed cluster environment.
4. Execute Word Count MapReduce application on Amazon EMR.
5. Write a MapReduce application to calculate aggregate metrics about a weblog dataset.
6. Write a MapReduce application to group web server log data, calculate histograms, and perform analytics.
7. Write a MapReduce application to calculate frequency distributions of URL hits.
8. Write a MapReduce application to calculate correlation between datasets using scatter plots.
9. Write a MapReduce application to parse complex data format in a dataset using input formatter.
10. Write a MapReduce application to join two MBOX-formatted email datasets.
11. Write a MapReduce application to perform content-based recommendations using product co-purchasing network metadata.
12. Write a MapReduce application to assign advertisements to keywords using AdWords balance algorithm.
13. Write a MapReduce application to clean and extract data from the 20news dataset, remove duplicate records, and store data as a tab-separated file using Python.

Course Outcomes:
1. Install standalone Hadoop v2 and Hadoop YARN.
2. Execute MapReduce applications on Amazon EMR.
3. Formulate new solutions or improve existing code using learned MapReduce techniques.

Course Code: 21DSCP508

Course Title: Data Visualisation Lab

Credit Hours: 1.5

Practical Hours: 3

Course Objectives:
1. Learn the interface in Tableau / MS-Excel for creating visualizations.
2. Understand methods for drawing charts and graphs.
3. Learn to use maps and tables in creating visualizations.
4. Prepare dashboard design for data analytics applications.

List of Exercises:
1. Study the interface, screen, and visual cues in Tableau / MS-Excel.
2. Connect with various data sources.
3. Work with measures and dimensions.
4. Work with colors in visualizations.
5. Use expressions, functions, date, and time features.
6. Draw various charts and graphs.
7. Create maps for visualizations.
8. Work with table calculations.
9. Sort data effectively.
10. Apply filters for data analysis.
11. Design dashboards for data analytics applications.

Course Outcomes:
1. Understand the elements in the interface to load and analyze data.
2. Design effective filters for data visualization.
3. Develop dashboard designs suitable for typical data analytics applications.
Course Code: 21DSCP509

Course Title: Machine Learning Laboratory

Credit Hours: 1.5

Practical Hours: 3

Course Objectives:
1. Understand Gaussian densities and implement them using Python.
2. Implement classification, clustering, and regression algorithms in Python.
3. Implement the convolutional neural network (CNN) architecture using Python.
4. Solve challenging research problems in the areas of Speech and Image processing.

List of Exercises:
1. Linear and logistic regression with error estimation.
2. Implementation of univariate and multivariate Gaussian densities.
3. Dimensionality reduction using principal component analysis (PCA).
4. Clustering using:
   a) k-means.
   b) Gaussian mixture modeling (GMM).
5. Classification using:
   a) Backpropagation neural network (BPNN).
   b) Support vector machine (SVM).
6. Construction of decision trees and random forests.
7. Implementation of convolutional neural network (CNN).
8. Sequence prediction using recurrent neural network (RNN).
9. Isolated-word speech recognition.
10. Face detection and tracking.
11. Object recognition.

Course Outcomes:
1. Understand the basic concepts of machine learning.
2. Design and implement classification, clustering, and regression algorithms using Python.
3. Design and implement methods for solving real-life problems using suitable machine learning techniques.
Course Code: 21DSPC601

Course Title: Data Analysis with R

Credit Hours: 3

Course Objectives:
1. Gain a thorough understanding of statistical reasoning, sampling theory, and hypothesis testing using R.
2. Learn Bayesian methods for estimating parameters and train regression, classification, and time series models.
3. Handle missing data gracefully and manage problematic data points.
4. Learn how to scale data analysis to larger datasets using Rcpp, data.table, dplyr, and parallelization.

Unit I: Introduction to Data and its Relationship
- Basics of R and data manipulation
- Univariate and multivariate data analysis
- Probability distributions and visualization methods

Unit II: Probability and Hypothesis Testing
- Basic probability and sampling
- Hypothesis testing framework and significance testing

Unit III: Bayesian Methods and Bootstrap
- Introduction to Bayesian analysis and MCMC
- Bootstrap methods and confidence intervals

Unit IV: Predictive Analysis
- Linear models and regression analysis
- Time series analysis and forecasting
- Predicting categorical variables using classifiers

Unit V: Implementation of Data Analysis
- Handling different data sources and formats
- Dealing with missing and messy data
- Working with large datasets and optimization techniques
- Utilizing popular R packages for data manipulation and visualization

Text Book:
1. Tony Fischetti, “Data Analysis with R”, O’Reilly Packt Publisher, Second Edition, 2018.

References:
1. Richard Cotton, “Learning R: A Step-by-Step Function Guide to Data Analysis”, O'Reilly Media, First Edition, 2013.
2. Dr. Bharti Motwani, “Data Analytics with R”, Wiley, First Edition, 2019.
3. Joseph Schmuller, “Statistical Analysis with R for Dummies”, Dummies First Edition, 2017.
4. Hadley Wickham, “R for Data Science”, O’Reilly, First Edition, 2016.

Course Outcomes:
1. Apply various statistical methods to analyze data relationships and draw meaningful inferences.
2. Perform hypothesis testing and probability analysis using R.
3. Implement Bayesian methods and bootstrap techniques for parameter estimation and testing.
4. Apply predictive analytics techniques including regression and time series analysis using R.
5. Use R for effective data analysis and visualization in real-world scenarios.

Course Code: 21DSPC602

Course Title: Cloud Computing

Credit Hours: 3

Course Objectives:
1. Understand the fundamentals of cloud computing.
2. Acquire knowledge of cloud computing technologies, architecture, and services.
3. Familiarize with the role of networks in cloud computing.
4. Explore applications and services provided by cloud computing.

Unit I: Introduction to Cloud Computing
- Layers and types of cloud computing
- Cloud computing features, platforms, and challenges
- Cloud computing security and applications

Unit II: The Role of Networks in Cloud Computing
- Cloud deployment models and network architectures
- Requirements and architecture for hybrid cloud networking
- Data-intensive technologies and computing systems in the cloud

Unit III: Enterprise Architecture in Cloud Computing
- Enterprise knowledge management and architecture
- Cloud technologies for enterprise computing
- Virtual Computing Lab (VCL) cloud architecture and high-performance computing integration

Unit IV: Cloud Services and Roles
- Infrastructure as a Service (IaaS), Platform as a Service (PaaS), and Software as a Service (SaaS)
- Cloud application scalability and architectures
- Delivering scientific computing services in the cloud

Unit V: Cloud Service Providers
- Overview of Amazon Web Services, Google App Engine, and Microsoft Azure
- Case studies on cloud infrastructure for data centers and software parks
- Cloud computing supporting Software as a Service (SaaS)

Text Books:
1. L Borko Furht and Armando J. Escalante, “Handbook of Cloud Computing”, Springer, 2010.
2. Dr. Rajkumar Buyya, Dr. Christian Vecchiola, and Dr. S Thamarai Selvi, “Mastering Cloud Computing”, Tata McGraw Hill, 1st Edition, 2013.

References:
1. Michael Miller, “Cloud Computing: Web-Based Applications That Change the Way You Work and Collaborate”, Que Publishing, 1st Edition, 2008.
2. D Anthony T Velte, Toby J Velte, and Robert Elsenpeter, “Cloud Computing: A Practical Approach”, Tata McGraw-Hill, 1st Edition, 2010.
3. John Ritting house & James Ransome, “Cloud Computing, Implementation, Management, and Strategy”, CRC Press, 1st Edition, 2010.

Course Outcomes:
1. Understand and explain the fundamentals, technologies, and architectures of cloud computing.
2. Describe the role of networks in supporting cloud computing services.
3. Analyze different cloud architectures and services offered by cloud providers.
4. Explore applications and use cases of cloud computing technologies.
5. Gain knowledge of web services and their integration with cloud computing.
Course Code: 21DSCP607

Course Title: Data Analysis with R Lab

Credit Hours: 3

Course Objectives:
1. Gain a thorough understanding of statistical reasoning, sampling theory, and hypothesis testing using R.
2. Learn Bayesian methods for parameter estimation, and train regression, classification, and time series models using R.
3. Handle missing data effectively using multiple imputation and manage problematic data points in R.
4. Learn techniques to scale data analysis to larger datasets using Rcpp, data.table, dplyr, and parallelization.

List of Exercises:
1. Write a function in R to determine if two matrices can be matrix multiplied.
2. Download a free dataset from the web, load it into R, and explore its structure.
3. Write an R function to compute the interquartile range.
4. Calculate the correlation coefficient between sepal length and width for each species of iris dataset in R.
5. Explore relationships between variables in a dataset downloaded from the web or built-in to R.
6. Write an R function to compute the confidence interval for a vector, with an option to specify the confidence level.
7. Formulate hypotheses, set an alpha level and sample size, and analyze results to understand data-dredging and p-hacking concepts.
8. Pick datasets from R's built-in datasets, form hypotheses, define null and alternative hypotheses, and test them using appropriate statistical tests.
9. Write an R function to plot the posterior distribution and the 95% credible interval for MCMC samples of a parameter.
10. Examine various distributions on chosen datasets in R.
11. Plot the pressure dataset to understand the relationship between mercury vapor pressure and temperature, and apply linear regression assumptions.
12. Write functions in R to create table summaries for data.table and tibble objects.

Course Outcomes:
1. Develop proficiency in using R for complex data analytics, including statistical reasoning, hypothesis testing, and predictive analytics.
2. Overcome challenges related to messy data, large datasets, result communication, and reproducibility in data analysis using R.
3. Progress from basic R usage to advanced predictive analytics, gaining skills in data manipulation, visualization, and interpretation.
Course Code: 21DSCP608

Course Title: Cloud Computing Lab

Credit Hours: 3

Course Objectives:
1. Learn how to develop and deploy warehouse applications in a cloud environment.
2. Gain proficiency in Apex Programming language for creating cloud applications.
3. Study and implement SOAP web services in C# or Java applications.
4. Explore and implement para-virtualization using VMWare's Workstation or Oracle's Virtual Box.
5. Develop skills in installing, configuring, and managing Hadoop services.
6. Understand the concepts and practical aspects of Platform as a Service (PaaS) using case studies of Facebook, Google App Engine, and Amazon Web Services (AWS).

List of Exercises:
1. Introduction to cloud computing concepts and platforms.
2. Create a Warehouse Application in SalesForce.com using cloud-based tools and services.
3. Develop an Application in SalesForce.com using Apex programming language for cloud-based functionalities.
4. Implement SOAP Web services in either C# or Java applications to enable communication between cloud-based services.
5. Implement para-virtualization using VMWare's Workstation or Oracle's Virtual Box with a guest operating system.
6. Install and configure Hadoop services for data processing and analysis in a cloud environment.
7. Create a cloud-based application, such as Word Count, using Hadoop's Map/Reduce framework.
8. Conduct a case study on Platform as a Service (PaaS) using examples from Facebook, Google App Engine, and AWS to understand their features and capabilities.

Course Outcomes:
1. Design and develop warehouse applications in a cloud environment using SalesForce.com and other cloud platforms.
2. Gain practical knowledge and experience in implementing SOAP web services and para-virtualization techniques.
3. Utilize Platform as a Service (PaaS) offerings from major cloud providers such as Facebook, Google App Engine, and AWS for application development and deployment.
Course Code: 21ETHS701

Course Title: Ethics in Data Analytics

Credit Hours: 2

Course Objectives:
1. Understand engineering ethics, moral principles, and legal issues in the context of data analytics.
2. Utilize data science to minimize risks and promote peace and prosperity.
3. Explore the moral and ethical dimensions of data analysis.
4. Discuss appropriate and ethical use of data, as well as strategies to address misuse.

UNIT - I Introduction
- Definitions and interpretations of 'Engineering Ethics'
- Moral issues in data analytics
- Types of moral inquiries and dilemmas
- Theories on moral autonomy (e.g., Kohlberg's and Gilligan's theories)
- Professionalism and professional ethics
- Ethical theories and their applications

UNIT - II Ethics Experiments & Examples
- Responsibility of engineers and experimenters
- Research ethics and codes of ethics
- Case studies on ethical considerations in industry (e.g., The Challenger case)
- Safety, risk assessment, and risk reduction strategies
- Government regulations and risk management (e.g., Chernobyl and Bhopal case studies)

UNIT - III Loyalty and Intellectual Property
- Collegiality, loyalty, and respect for authority
- Confidentiality and conflicts of interest
- Professional and employee rights
- Intellectual property rights (IPR) and ethical considerations
- Ethical issues in management, consulting, and leadership roles

UNIT - IV Good Data Science
- Ethics in data science
- Principles of good data science (Five Cs: Consent, Clarity, Consistency, Control, Consequences)
- Implementing ethical practices in data science projects

UNIT - V Future with Data Science Ethics
- Ethics training and development
- Guiding principles for ethical data science
- Integrating ethics into data-driven cultures
- Regulatory frameworks and ethical considerations
- Case studies highlighting ethical challenges and solutions in data analytics

Text Books:
1. Mike Martin and Roland Schinzinger, “Ethics in Engineering”, McGraw Hill, New York, 2005.
2. DJ Patil, Hilary Mason, Mike Loukides, “Ethics and Data Science”, O'Reilly Media, Inc., July 2018.

References:
1. Charles E Harris, Michael S Pritchard, Michael J Rabins, “Engineering Ethics – Concepts and Cases”, Thompson Learning, 2000.
2. Charles D Fleddermann, “Engineering Ethics”, Prentice Hall, New Mexico, 1999.
3. John R Boatright, “Ethics and the Conduct of Business”, Pearson Education, 2003.
4. Edmund G Seebauer, Robert L Barry, “Fundamentals of Ethics for Scientists and Engineers”, Oxford University Press, 2001.
5. David Ermann, Michele S Shauf, “Computers, Ethics and Society”, Oxford University Press, 2003.
6. Viktor Mayer-Schönberger, Kenneth Cukier, “Big Data: A Revolution That Will Transform How We Live, Work, and Think”, Houghton Mifflin Harcourt, 2013.
7. Bruce Schneier, “Data and Goliath: The Hidden Battles to Collect Your Data and Control Your World”, W.W. Norton, Feb-2016.
8. Marc Goodman, “Future Crimes: Everything Is Connected, Everyone Is Vulnerable and What We Can Do About It”, Penguin Random House, 2016.

Course Outcomes:
1. Understand the ethical, legal, and technological aspects of data analytics.
2. Perform risk analysis in an ethical framework.
3. Apply fair practices and ethical considerations in data-related decisions.
4. Appreciate the importance of ethical decisions for the public good.
5. Foster a data-driven culture that prioritizes ethical practices and considerations.
Course Code: 21DSPC702

Course Title: Internet of Things

Credit Hours: 3

Course Objectives:
1. Understand the fundamental concepts of the Internet of Things (IoT).
2. Introduce network and communication protocols used in IoT.
3. Build small, low-cost embedded systems using Arduino, Raspberry Pi, or similar boards.
4. Apply IoT concepts in real-world scenarios.

UNIT - I Introduction to IoT
- Defining IoT and its characteristics
- Physical and logical design of IoT systems
- Functional blocks of IoT
- Communication models and APIs
- Difference between IoT and Machine to Machine (M2M)
- Software Defined Network (SDN) concepts

UNIT - II Network, Challenges, and Applications of IoT
- Wireless medium access issues
- MAC protocol survey
- Routing protocols in IoT
- Sensor deployment and node discovery
- Data aggregation and dissemination
- Design, development, and security challenges in IoT
- Applications of IoT in home automation, industry, surveillance, and other areas

UNIT - III Microcontrollers
- Architecture of 8031/8051 and introduction to 16-bit microcontrollers
- Programming timers, serial ports, interrupts, and interfacing with peripherals
- Sensor interfacing and external memory interface
- Stepper motor control and waveform generation

UNIT - IV Raspberry Pi with Python and Arduino
- Introduction to Python programming language
- Building IoT systems with Raspberry Pi
- IoT device components and endpoints
- Programming Raspberry Pi using Python
- Introduction to Arduino and other IoT platforms

UNIT - V Development of IoTs
- Developing sensor-based applications using embedded systems
- IoT applications in industrial automation, smart grid, smart cities, etc.
- Participatory sensing and data analytics for IoT

Text Books:
1. Vijay Madisetti, Arshdeep Bahga, "Internet of Things: A Hands-On Approach", Orient Blackswan Pvt., Ltd., New Delhi, 2015.
2. Waltenegus Dargie, Christian Poellabauer, "Fundamentals of Wireless Sensor Networks: Theory and Practice", John Wiley and Sons, Ltd., 2010.

References:
1. Jeeva Jose, "Internet of Things", KBP House, 1st edition, 2018.
2. Raj Kamal, "Internet of Things: Architecture and Design Principles", McGraw Hill Education, 2017.
3. Cuno Pfister, "Getting Started with the Internet of Things", O'Reilly Media, 2011.

Course Outcomes:
1. Understand IoT concepts and principles.
2. Analyze wireless sensor network protocols.
3. Design and analyze IoT applications in various domains.
4. Implement basic IoT applications on embedded platforms.
5. Explore IoT development using Raspberry Pi and Arduino platforms.
Course Code: 21DSCP706

Course Title: Internet of Things (IoT) Lab

Credit Hours: 3

Course Objectives:
1. Understand the working principle of Embedded Systems.
2. Utilize various sensors in IoT applications.
3. Learn to use different tools in IoT for designing applications.
4. Develop simple IoT applications.

List of Exercises:
1. Interface alphanumeric LCD using 8051 microcontroller.
2. Study ARM evaluation system.
3. Flash LEDs using ARM microcontroller (LPC2148).
4. Interface keyboard and LCD using ARM microcontroller (LPC2148).
5. Temperature sensor interface using ARM microcontroller (LPC2148).
6. Identify moisture content in agricultural land using sensors.
7. Develop a fire alarm indicator using IoT.
8. Implement basic home automation system using IoT.
9. Control PWM signals in IoT applications.
10. Design a calculator using NumPy.
11. Create a game using PyGame.
12. Design frontend GUI using TKinter.
13. Identify earthquake using sensors and IoT.
14. Implement a sorting mechanism in IoT.
15. Access GPIO using Google Assistant.
16. Upload data to the cloud and monitor in the cloud.
17. Connect to social media platforms like Twitter using IoT.

Course Outcomes:
1. Understand the fundamentals of Microcontroller Programming.
2. Use Raspberry Pi 3 for peripheral interfacing and troubleshooting.
3. Evaluate networking technologies for IoT applications.

Course Code: 21ETIT707

Course Title: Seminar/Industrial Training

Credit Hours: 4

Course Objectives:
1. Work/training on a technical topic/field related to Data Science to develop written/oral presentation skills and gain practical knowledge in solving Data Science problems.
2. Develop the ability to write technical papers for conferences.
3. Train and develop problem-solving skills related to Data Science.
4. Gain hands-on working experience in reputed organizations.

Course Description:
Students will engage in technical training related to Data Science, focusing on developing their presentation and problem-solving skills. The course includes seminar presentations on chosen technical topics, interaction with the audience, and training in reputed organizations during the summer vacation.

Course Outcomes:
1. Confidently face audiences and participate in group discussions during corporate interviews.
2. Acquire practical experience in working in real environments and using technical resources.
3. Apply previously learned knowledge to solve problems and demonstrate understanding of international Data Science standards.
4. Analyze Data Science problems and propose meaningful solutions using appropriate methodologies.
5. Present solutions effectively through written and oral presentations.
Course Code: 21DSPV803

Course Title: Project Work and Viva Voce

Credit Hours: 6

Prerequisites: Project Research (PR) - 10 hours, Seminar (S) - 2 hours

Course Objectives:
1. Develop the ability to identify and define a problem within the field of study.
2. Conduct a comprehensive literature review related to the identified problem.
3. Implement solutions to the problem and analyze the results effectively.
4. Train students in preparing high-quality project reports and in facing project reviews and viva voce examinations.

Course Outcomes:
By the end of this course, students will be able to:
1. Identify and tackle challenging practical problems by formulating appropriate methodologies.
2. Conduct experiments using available computer software and hardware resources.
3. Present their findings and conclusions clearly using suitable tables and graphs in project reports.
4. Analyze and address any shortcomings encountered during the implementation of technical problems.
5. Apply their acquired knowledge to solve research problems in current areas of interest within the field.
